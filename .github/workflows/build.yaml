# Uses Gradle actions to build project.
# For details, see: https://github.com/gradle/actions
name: Build, test and publish

on:
  push:
    tags:
      - '*'
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      # Required for docker push
      packages: write
      attestations: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          architecture: 'x64'
      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Build and test
        run: ./gradlew build -Pmaven_settings_location='undefined' -Pspring-boot.include-gigs-report=true
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Application
          path: build/libs/crs-service.jar
      - name: Upload test reports
        uses: actions/upload-artifact@v4
        with:
          name: Test reports
          path: |
            build/test-results
            build/reports/tests
      # NOTE: on PRs, build docker image locally to ensure docker build is not broken.
      # On main branch, push "latest" tagged image.
      # On tags, push a docker image using tag name
      - name: Build Docker image
        if: github.event_name == 'pull_request'
        run: |
          ./gradlew -Pmaven_settings_location='undefined' -Pspring-boot.include-gigs-report=true dockerBuild
      - name: Login to Docker registry
        if: github.ref == 'refs/heads/main' || startsWith(github.event.ref, 'refs/tags/')
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push latest Docker image
        if: github.ref == 'refs/heads/main'
        run: >
          ./gradlew 
          -Pmaven_settings_location='undefined'
          -Pversion="latest"
          -Pspring-boot.build-image.imageName="ghcr.io/${GITHUB_REPOSITORY@L}"
          -Pspring-boot.include-gigs-report=true
          dockerPush
      - name: Push tagged Docker image
        if: startsWith(github.event.ref, 'refs/tags/')
        run: >
          ./gradlew 
          -Pmaven_settings_location='undefined'
          -Pversion="$GITHUB_REF_NAME"
          -Pspring-boot.build-image.imageName="ghcr.io/${GITHUB_REPOSITORY@L}"
          -Pspring-boot.include-gigs-report=true
          dockerPush
